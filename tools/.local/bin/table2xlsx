#!/usr/bin/perl
use strict;
use warnings FATAL => 'all';
use Excel::Writer::XLSX;
use File::Basename;
use Getopt::Long;

my $header = undef;
my $header_line = undef;
my $separator = "\t";
my $no_text = undef;
GetOptions(
	"header=s" => \$header,
	"separator=s" => \$separator,
	"no-text" => \$no_text,
) or die $!;

if(defined $header) {
	open my $fh, '<', $header or die $!;
	chomp(my $line = <$fh>);
	$header_line = [ split /\t/, $line ];
	close $fh;
}

if(scalar @ARGV < 2) {
	die "Usage: table2xlsx [-h header] fileout.xlsx filein.tsv [filein2.tsv ...]\n";
}

my ($output, @input_files) = @ARGV;

if(-e $output) {
	die "Error: output [$output] already exists.\n";
}

my $workbook = Excel::Writer::XLSX->new( $output );
$workbook->set_optimization();

for my $arg(@input_files) {
	open my $fh, '<', $arg or die "Error on open [$arg]: $!\n";

	my $ws_name = basename($arg);
	$ws_name =~ s![\[\]:*?\/\\]+!_!g; # remove []:*?/\ chars
	$ws_name =~ s/\.[^\.]+$//; # remove extension if any
	$ws_name = substr($ws_name, 0, 31); # truncate to 31 chars

	my $worksheet = $workbook->add_worksheet($ws_name);

	my $row = 0;
	if(defined $header_line) {
		for my $i(0..$#$header_line) {
			if($no_text) {
				$worksheet->write($row, $i, $header_line->[$i]);
			}
			else {
				$worksheet->write_string($row, $i, $header_line->[$i]);
			}
		}
		$row = 1;
	}

	for(; $_ = <$fh>; $row++) {
		chomp;
		my @f = split $separator;
		for my $i(0..$#f) {
			if($no_text) {
				$worksheet->write($row, $i, $f[$i]);
			}
			else {
				$worksheet->write_string($row, $i, $f[$i]);
			}
		}
	}
}

